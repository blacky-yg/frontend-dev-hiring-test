{"version":3,"sources":["assets/splash_image.png","assets/delivery_image.png","components/Main.js","components/Delivery.js","components/RestoDetails.js","components/RestoList.js","App.js","index.js"],"names":["module","exports","Main","navigation","View","style","styles","container","TouchableOpacity","navigationRight","onPress","navigate","Text","skip","Image","source","splash_img","splash_image","title","description","touchable","button","StatusBar","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","alignSelf","color","textAlign","fontWeight","marginHorizontal","marginBottom","width","height","borderWidth","borderColor","borderRadius","marginRight","Delivery","restos","button_space","navigationLeft","goBack","back","delivery_img","delivery_image","flexDirection","RestoDetails","item","getResto","resto","alert","id","name","tinyLogo","uri","image","restoStyle","toUpperCase","location","padding","marginLeft","marginTop","RestoList","useState","search","setSearch","filteredResto","setFilteredResto","setRestos","setLocation","setErrorMsg","useEffect","a","async","Location","status","accuracy","High","fetch","then","response","json","responseJson","catch","error","console","searchFilterFunction","text","newData","filter","itemData","textData","indexOf","TextInput","input","onChangeText","onClear","value","placeholder","ScrollView","nestedScrollEnabled","map","initialRegion","latitude","coords","longitude","latitudeDelta","longitudeDelta","FlatList","scrollEnabled","data","keyExtractor","index","toString","ItemSeparatorComponent","renderItem","margin","Dimensions","get","RoutesStack","createStackNavigator","registerRootComponent","NavigationContainer","Navigator","initialRouteName","headerMode","Screen","component"],"mappings":"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","file":"static/js/app.b16c0545.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splash_image.dfaf6083.png\";","module.exports = __webpack_public_path__ + \"static/media/delivery_image.b1893ee1.png\";","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Image, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport splash_img from '../assets/splash_image.png';\n\nexport default function Main({ navigation }) {\n    return (\n        <View style={styles.container}>\n\n          <TouchableOpacity\n            style={styles.navigationRight}\n            onPress={() => navigation.navigate('RestoList')}\n          >\n            <Text style={styles.skip}>Skip</Text>\n          </TouchableOpacity>\n\n          <Image source={splash_img} style={styles.splash_image}/>\n\n          <Text style={styles.title}>\n            Find The Food You Want\n          </Text>\n\n          <Text style={styles.description}>\n            Our app helps you dinf the right food for every mood, any time & any day\n          </Text>\n\n          <TouchableOpacity\n            style={styles.touchable}\n          >\n\n            <Text\n              onPress={() => navigation.navigate('Delivery')}\n              style={styles.button}\n            >\n              {'>'}\n            </Text>\n\n          </TouchableOpacity>\n\n          <StatusBar style=\"auto\" />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    navigationRight: {\n      fontSize: 40,\n      alignSelf: 'flex-end',\n      color: '#fff'\n    },\n    title: {\n      color: '#2180EF',\n      fontSize: 50,\n      textAlign: 'center',\n      fontWeight: 'bold',\n      marginHorizontal: 70\n    },\n    description: {\n      fontSize: 20,\n      justifyContent: 'center',\n      marginBottom: 150,\n      marginHorizontal: 40,\n      textAlign: 'center'\n    },\n    splash_image: {\n      width: 330,\n      height: 380,\n    },\n    touchable: {\n      borderWidth: 1,\n      borderColor: '#2180EF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 50,\n      height: 50,\n      backgroundColor: '#2180EF',\n      borderRadius: 50\n    },\n    skip: {\n      fontSize: 30,\n      alignSelf: 'flex-end',\n      marginRight: 20\n    },\n    button: {\n      fontSize: 30,\n      fontWeight: 'bold',\n      color: 'white'\n    }\n});","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';\nimport delivery_img from '../assets/delivery_image.png';\n\nexport default function Delivery({ navigation }) {\n    return (\n        <View style={styles.restos}>\n\n            <View style={styles.button_space}>\n\n                <TouchableOpacity\n                    style={styles.navigationLeft}\n                    onPress={() => navigation.goBack()}\n                >\n                    <Text style={styles.back}>Back</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    style={styles.navigationRight}\n                    onPress={() => navigation.navigate('RestoList')}\n                >\n                    <Text style={styles.skip}>Skip</Text>\n                </TouchableOpacity>\n\n            </View>\n\n            <Image source={delivery_img} style={styles.delivery_image}/>\n\n            <Text style={styles.title}> We'll have it delivered </Text>\n\n            <Text style={styles.description}>\n                Our hassle free delivery service is world class and\n                will have your order delivered to any address of\n                your specification.\n            </Text>\n\n            <TouchableOpacity\n                style={styles.touchable}\n            >\n                <Text\n                    onPress={() => navigation.navigate('RestoList')}\n                    style={styles.button}\n                >\n                    {'>'}\n                </Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    restos: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    navigationLeft: {\n        fontSize: 30,\n        alignSelf: 'flex-end',\n        marginHorizontal: 150\n    },\n    navigationRight: {\n        fontSize: 30,\n        alignSelf: 'flex-end',\n        marginHorizontal: 150\n    },\n    title: {\n        color: '#2180EF',\n        fontSize: 50,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        marginHorizontal: 40\n    },\n    description: {\n        fontSize: 20,\n        justifyContent: 'center',\n        marginBottom: 150,\n        marginHorizontal: 50,\n        textAlign: 'center'\n    },\n    delivery_image: {\n        width: 430,\n        height: 360\n    },\n    button_space: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    touchable: {\n        borderWidth: 1,\n        borderColor: '#2180EF',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: 50,\n        height: 50,\n        backgroundColor: '#2180EF',\n        borderRadius: 50\n    },\n    skip: {\n        fontSize: 30,\n        alignSelf: 'flex-end',\n    },\n    back: {\n        fontSize: 30,\n        alignSelf: 'flex-end',\n    },\n    button: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        color: 'white'\n    }\n});","import React from 'react';\nimport { Image, View, Text, StyleSheet, TouchableOpacity } from 'react-native';\n\nexport default function RestoDetails({ item }) {\n\n    const getResto = (resto) => {\n      alert('Resto : ' + resto.id + ' Name : ' + resto.name);\n    };\n\n    return (\n      <View style={styles.resto} onPress={() => getResto(item)}>\n\n        <TouchableOpacity onPress={() => getResto(item)}>\n\n          <Image\n            style={styles.tinyLogo}\n            source={{\n                uri: item.image\n            }}\n          />\n\n        </TouchableOpacity>\n\n        <Text style={styles.restoStyle} onPress={() => getResto(item)}>\n          {item.name.toUpperCase()} |\n          {item.location}\n        </Text>\n\n      </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n  resto: {\n    flexDirection: 'row',\n    padding: 5\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  restoStyle: {\n    padding: 10,\n    flexDirection: 'row',\n    marginLeft: 10,\n    marginTop: 7,\n    textAlign: 'center'\n  }\n});","import React, { useState, useEffect } from 'react';\nimport { View, FlatList, StyleSheet, Dimensions, ScrollView, TextInput } from 'react-native';\nimport MapView from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport RestoDetails from './RestoDetails'\n\nexport default function RestoList({ navigation }) {\n    const [search, setSearch] = useState('');\n    const [filteredResto, setFilteredResto] = useState([]);\n    const [restos, setRestos] = useState([]);\n    const [location, setLocation] = useState(null);\n    const [errorMsg, setErrorMsg] = useState(null);\n\n    useEffect(() => {\n      (async () => {\n        let { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          setErrorMsg('Permission to access location was denied');\n          return;\n        }\n        let location = await Location.getCurrentPositionAsync({accuracy:Location.Accuracy.High});\n        setLocation(location);\n      })();\n\n      fetch(\"https://my-json-server.typicode.com/blacky-yg/frontend-dev-hiring-test/restos\")\n        .then((response) => response.json())\n        .then((responseJson) => {\n          setFilteredResto(responseJson);\n          setRestos(responseJson);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }, [location]);\n\n    const searchFilterFunction = (text) => {\n      if (text) {\n        const newData = restos.filter(function (item) {\n          const itemData = item.name\n            ? item.name.toUpperCase()\n            : ''.toUpperCase();\n          const textData = text.toUpperCase();\n          return itemData.indexOf(textData) > -1;\n        });\n        setFilteredResto(newData);\n        setSearch(text);\n      } else {\n        setFilteredResto(restos);\n        setSearch(text);\n      }\n    };\n\n    const RestoSeparatorView = () => {\n      return (\n        <View\n          style={{\n            height: 20,\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n        />\n      );\n    };\n\n    return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          onChangeText={(text) => searchFilterFunction(text)}\n          onClear={(text) => searchFilterFunction('')}\n          value={search}\n          placeholder=\"Search Resto here...\"\n        />\n\n        <ScrollView nestedScrollEnabled={true}>\n\n          <View>\n            <MapView style={styles.map}\n              initialRegion={{\n                latitude: location?.coords?.latitude,\n                longitude: location?.coords?.longitude,\n                latitudeDelta: 0.0922,\n                longitudeDelta: 0.0421\n              }}\n            />\n          </View>\n\n          <FlatList\n            scrollEnabled={false}\n            data={filteredResto}\n            keyExtractor={(item, index) => index.toString()}\n            ItemSeparatorComponent={RestoSeparatorView}\n            renderItem={RestoDetails}/>\n\n        </ScrollView>\n\n      </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 30,\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 2,\n    borderRadius: 20,\n    padding: 13,\n    borderColor: '#2180EF'\n  },\n  restoStyle: {\n    padding: 10,\n    flexDirection: 'row',\n    marginLeft: 10,\n    marginTop: 7,\n    textAlign: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height - 400,\n    marginBottom: 10\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  resto: {\n    flexDirection: 'row',\n    padding: 5\n  }\n});","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Main from './components/Main'\nimport Delivery from './components/Delivery'\nimport RestoList from './components/RestoList'\n\nconst RoutesStack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <RoutesStack.Navigator initialRouteName=\"Main\" headerMode='none'>\n        <RoutesStack.Screen name=\"Main\" component={Main} />\n        <RoutesStack.Screen name=\"Delivery\" component={Delivery} />\n        <RoutesStack.Screen name=\"RestoList\" component={RestoList} />\n      </RoutesStack.Navigator>\n    </NavigationContainer>\n  );\n}","import 'react-native-gesture-handler';\nimport { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}